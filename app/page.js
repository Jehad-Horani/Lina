"use client";

import { useState, useRef, useEffect } from "react";
import { useRouter } from "next/navigation";
import Link from "next/link";
import confetti from "canvas-confetti";


export default function QuizPage() {
const router = useRouter();

  const [step, setStep] = useState(1);
  const [inputValue, setInputValue] = useState("");
  const [error, setError] = useState("");
  const noBtnRef = useRef(null);
  const [accessGranted, setAccessGranted] = useState(false);

  // ุจูุงูุงุช ูุนุจุฉ ุงูุจุงุฒู
  const size = 3; // ุญุฌู ุงูุจุงุฒู
  const [tiles, setTiles] = useState([]);
  const [emptyIndex, setEmptyIndex] = useState(8);

  // ุฅุนุฏุงุฏ ุงูุจุงุฒู ููุง ููุตู ููุฎุทูุฉ 4
  useEffect(() => {
    if (step === 4) {
      const arr = Array.from({ length: size * size }, (_, i) => i);
      let shuffled = shuffleArray(arr);
      while (!isSolvable(shuffled)) {
        shuffled = shuffleArray(arr);
      }
      setTiles(shuffled);
      setEmptyIndex(shuffled.indexOf(size * size - 1));
    }
  }, [step]);

  // ุฏุงูุฉ ุฎูุท
  function shuffleArray(array) {
    let arr = [...array];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
  }

  // ุฏุงูุฉ ุชุญูู ูู ุงูุญู
  function isSolvable(arr) {
    let invCount = 0;
    for (let i = 0; i < arr.length - 1; i++) {
      for (let j = i + 1; j < arr.length; j++) {
        if (
          arr[i] !== size * size - 1 &&
          arr[j] !== size * size - 1 &&
          arr[i] > arr[j]
        ) {
          invCount++;
        }
      }
    }
    return invCount % 2 === 0;
  }

  // ุชุญุฑูู ุงููุทุน
  function moveTile(index) {
    const validMoves = [
      emptyIndex - size,
      emptyIndex + size,
      emptyIndex - 1,
      emptyIndex + 1,
    ];
    if (validMoves.includes(index)) {
      const newTiles = [...tiles];
      [newTiles[emptyIndex], newTiles[index]] = [
        newTiles[index],
        newTiles[emptyIndex],
      ];
      setTiles(newTiles);
      setEmptyIndex(index);

      // ุชุญูู ูู ุงูููุฒ
      if (newTiles.every((val, idx) => val === idx)) {
        setTimeout(() => {
          setStep(5);
          setAccessGranted(true);
        }, 500);

        confetti({
          particleCount: 120,
          spread: 80,
          origin: { y: 0.6 },
        });
      }
    }
  }

  // ูููุจ ูุชุณุงูุทุฉ ุจุนุฏ ุงูููุฒ
  useEffect(() => {
    if (!accessGranted) return;

    const createHeart = () => {
      const heart = document.createElement("div");
      heart.innerHTML = "โค๏ธ";
      heart.style.position = "fixed";
      heart.style.left = Math.random() * 100 + "vw";
      heart.style.top = "-20px";
      heart.style.fontSize = Math.random() * 20 + 20 + "px";
      heart.style.opacity = Math.random();
      heart.style.animation = `fall ${Math.random() * 3 + 2}s linear`;

      document.body.appendChild(heart);
      setTimeout(() => heart.remove(), 5000);
    };

    const heartInterval = setInterval(createHeart, 300);
    return () => clearInterval(heartInterval);
  }, [accessGranted]);

  // ุฅุถุงูุฉ ุฃููููุดู CSS ูููููุจ
  useEffect(() => {
    const style = document.createElement("style");
    style.innerHTML = `
      @keyframes fall {
        to {
          transform: translateY(100vh);
          opacity: 0;
        }
      }
    `;
    document.head.appendChild(style);
  }, []);

  // ุฒุฑ "ูุง" ุงููุงุฑุจ
  useEffect(() => {
    if (step === 1 || step === 2) {
      const btn = noBtnRef.current;
      if (!btn) return;

      const handleMouseMove = (e) => {
        const rect = btn.getBoundingClientRect();
        const distanceX = Math.abs(
          e.clientX - (rect.left + rect.width / 2)
        );
        const distanceY = Math.abs(
          e.clientY - (rect.top + rect.height / 2)
        );

        if (distanceX < 100 && distanceY < 60) {
          const maxX = window.innerWidth - rect.width - 20;
          const maxY = window.innerHeight - rect.height - 20;
          const randomX = Math.floor(Math.random() * maxX);
          const randomY = Math.floor(Math.random() * maxY);
          btn.style.position = "fixed";
          btn.style.left = randomX + "px";
          btn.style.top = randomY + "px";
        }
      };

      window.addEventListener("mousemove", handleMouseMove);

      return () => {
        window.removeEventListener("mousemove", handleMouseMove);
        if (btn) {
          btn.style.position = "static";
          btn.style.left = null;
          btn.style.top = null;
        }
      };
    }
  }, [step]);

  const handleNextStep = () => {
    setError("");
    if (step === 3) {
      if (inputValue.trim() === "2711") {
        setStep(4);
      } else {
        setError(" ุญุงูู ูุฑุฉ ุซุงููุฉ... ููุฑู ุฎุงุฑุฌ ุงูุตูุฏูู ููุฑู ุจุชูุงูุชู ูุง ูููุง");
      }
    } else {
      setStep(step + 1);
    }
  };
  return (
    <div className="min-h-screen bg-pink-100 flex flex-col items-center justify-center p-4 text-center">
      {step === 1 && (
        <>
          <h1 className="text-3xl font-bold text-pink-700 mb-6">
            ูู ุจุชุญุจูููุ ููุง ุชุญูู ุงููู ุจุนูู ูุง ูุนู ูุง ูุง ููุง ุงุชูุถูู ุฎุงูุฉ
          </h1>
          <div className="flex justify-center gap-8">
            <button
              onClick={() => setStep(2)}
              className="bg-pink-600 cursor-pointer text-white px-6 py-3 rounded-lg shadow hover:bg-pink-700 transition"
            >
              ูุนู
            </button>

            <button
              ref={noBtnRef}
              className="bg-pink-300 text-pink-800 px-6 py-3 rounded-lg shadow cursor-not-allowed select-none"
              disabled
            >
              ูุง
            </button>
          </div>
          <p className="mt-4 text-pink-600 italic">ุฌุฑุจู ุชุถุบุทู ุนูู "ูุง" ูู ุชูุฏุฑู</p>
        </>
      )}

      {step === 2 && (
        <>
          <h1 className="text-3xl font-bold text-pink-700 mb-6">
            ูู ุจุชูุฑููููุ ุงุฎูุฑุง ูุบุตุจุง ุนูู ูุชุญูู ูุง ุฎุงูุฉ ุงุญูู ูุนู ูู ุงูู ูููุง ููุฏ ุญุงูู
          </h1>
          <div className="flex justify-center gap-8">
            <button
              ref={noBtnRef}
              className="bg-pink-300 text-pink-800 px-6 py-3 rounded-lg shadow cursor-not-allowed select-none"
              disabled
            >
              ูุนู
            </button>

            <button
              onClick={() => setStep(3)}
              className="bg-pink-600 cursor-pointer text-white px-6 py-3 rounded-lg shadow hover:bg-pink-700 transition"
            >
              ูุง
            </button>
          </div>
          <p className="mt-4 text-pink-600 italic">ุฌุฑุจู ุชุถุบุทู ุนูู "ูุนู" ูู ุชูุฏุฑู</p>
        </>
      )}

      {step === 3 && (
        <>
          <h1 className="text-3xl font-bold text-pink-700 mb-6">
            ุฃูุด ุฃุญูู ุดูุฑ ุจุญูุงุชูุ <br />
            <span className="text-sm font-normal">(ููุฑู ุฎุงุฑุฌ ุงูุตูุฏูู)</span>
          </h1>
          <input
            type="text"
            value={inputValue}
            onChange={(e) => setInputValue(e.target.value)}
            placeholder="ุงูุชุจู ุฑูู ุงูุดูุฑ ุงูุตุญูุญ"
            className="p-3 rounded-lg border-2 text-black border-pink-400 focus:outline-none focus:border-pink-600 text-center text-lg w-64"
          />
          {error && <p className="text-red-600 mt-2 font-semibold animate-shake">{error}</p>}
          <button
            onClick={handleNextStep}
            className="mt-6 bg-pink-600 cursor-pointer text-white px-6 py-3 rounded-lg shadow hover:bg-pink-700 transition"
          >
            ุชุฃููุฏ
          </button>
        </>
      )}

      {step === 4 && (
        <>
          <h1 className="text-3xl font-bold text-pink-700 mb-6">๐ฏ ุฑุชุจู ุงูุตูุฑุฉ ูุชุดููู ุงูููุงุฌุฃุฉ</h1>
          <div
            className="grid gap-1"
            style={{
              gridTemplateColumns: `repeat(${size}, 100px)`,
              gridTemplateRows: `repeat(${size}, 100px)`,
            }}
          >
            {tiles.map((tile, idx) => (
              <div
                key={idx}
                onClick={() => moveTile(idx)}
                className="bg-pink-200 cursor-pointer flex items-center justify-center"
                style={{
                  backgroundImage:
                    tile === size * size - 1
                      ? "none"
                      : `url('/lina.jpg')`, // ุถุน ุตูุฑุฉ ูููุง ููุง
                  backgroundSize: `${size * 100}px ${size * 100}px`,
                  backgroundPosition: `${-(tile % size) * 100
                    }px ${-Math.floor(tile / size) * 100}px`,
                }}
              >
                {tile === size * size - 1 ? "" : ""}
              </div>
            ))}
          </div>
          <p className="mt-4 text-pink-600">ุงุถุบุทู ุนูู ุงููุฑุจุนุงุช ูุชูููู ุงูุตูุฑุฉ ๐</p>
        </>
      )}

      {step === 5 && (
        <>
          <h1 className="text-3xl font-bold text-pink-700 mb-6"> ูุจุฑููููู ุงุฎูุฑุง ุนุฏูุชู ูุงูุชุญุฏู ุงูุชุงูู</h1>
          <p className="text-pink-800 mb-8 max-w-md">
            ุดูุฑุงู ูุฃูู ุฌุงูุจุชู ุจูู ุญุจ ุดูุฑุงู ูุงูู ุงุณุชุญููุชููู ุดูุฑุง ูุงูู ูุชุญููุงูู ูู ุฒูุงู ูุซูุฑ ุดูุฑุง ุงูู ูุนู ุจุญูุงุชู ูุง ูููุง ูู ุนุงู ูุงูุชู ุจุงูู ุฎูุฑ ูุง ุงุญูู ูุงุบูู ูุงุฑูู ูุงุญู ุงูุณุงูุฉ ุจุงูููู ูู ุนุงู ูุงูุชู ุงูุฎูุฑ ููุนุงู ุงูุฌุฏูุฏ ูู ุณูุฉ ูุงูุชู ูุฑุญุชู ูุญูุงุชู ูููุจู ูุฑูุญู ูู ุนุงู ูุงูุชู ุญุจูุจุชู ููุฑุชู ูุงู ููุงุฏู ุงู ุดุงุก ุงููู ูุง ุญูุงุชู ุงูุชู ุงุญูู ููู ูุตูุฑ ุนุดุฑูู ุจุงูููู ููู ุงูุณู ุจุงููู ููู ูุจุฑุชู ูุตุฑุชู ุนุดุฑูููุฉ ุฌุงุฏุฉ ุงููู ูุฎูููู ุงูุงูู ูุง ูููุง ูุง ูุตุฏุฑ ุทุงูุชู ูุณุนุงุฏุชู ุจูู ูุงู ุงูุฏููุง ุงูุชู ุฌุฏ ูู ูู ููุจู ุจููู ุดูุฑุง ุงูู ุจุญูุงุชู ูุดูุฑุง ุงูู ุจุญูุงุฉ ุงููู ุจุฑุถู ูุงููู ูููู ุบูุฑู ูุธุฑุชูู ุนูู ุจุณุจุจู ูููู ุตุงุฑู ูุญุจููู ุจุณุจุจู ุงูู ุจุญูุงุชูุง ูุง ูุชุนุทููู ุงูุณูุงุฑุฉ ุนุงูุฌุงูุนุฉ ุงุนุทุชูู ุงูุงูุง ุจุณุจุจู ุงุฎูุงูู ุจุญูุงุชูู ูุง ุญุจู ููุนุฏู ุนูุฏู ุตุงุฑู ุงูู ูุง ูุดููููู ุจุญูู ูุนู ุนุงูุณุฑูุน ูุชุฌูุนู ุนูุฏู ุจุณุจุจู ุงูุชู ูุตุฏุฑ ุณุนุงุฏุชูุง ูููุง ูุง ูููุง ุงูุณู ุจุงููู ุญูุงุชู ุงูุชู ููุงุฑุจ ุงูู ุนูู ุทูู ุงูุนูุฑ ูู ุณูุฉ ูุงุญูุง ูุน ุจุนุถ ูุจูุชุฒุงูุฎ ุนูู ุจุนุถ ูุจูุชูุจู ูุงุฑุจ ูู ุณูุฉ ูุงุญูุง ูููู ููู ูุฑุชุงุญูู ููุจุณูุทูู ูุน ุจุนุถ ุจุนุฑูุด ุจุณ ุจุญุณู ูุฑุชุงุญุฉ ูุนูู ุงูุง ูุฑุชุงุญ ููุงุฐ ุงูู ุงุฌุงูู ูุงููู ุจุฏู ุชุฑุชุงุญู ุฎุงูุฉ ูุง ุงูู ุฏุฎู ุงูููู ูุง ุณูุฏู ูุฑูุญู ูุนูููู ุงูุชู ุงููู ูุฎูููู ุงูุงูู ููุง ูุญุฑููู ููู ูุง ุญูุงุชู ุงูุชู ุจุนูุฏ ุนู ุงููุจู ุนููุชูู ููู ุงุดู ุจุณูุท ุชุชุณูู ุนููู ูุชุถุญูู ูุชุญุณู ุจูุฑุงุดุงุช ุดูู ุดููู ุฌูุงุฏ ููุง ูู ุชุฑูู ูู ูุจู ุฑูุญู ุดููู ุงูุฌุงูุจ ุงูุฑูููุณู ููู ูุง ุญูุงุชู ูุงุนุฑูู ุงูู ุฌุฏ ุจุญุจู ูู ูู ููุจู ูุง ูููุง ุจุณ ูุงููู ูุง ุจุนุฑู ุงุนุจุฑ ุฌุฏ ูุงููู ุจุญุจู ููุง ุจุฏู ุงููู ุญูุงุชู ุบูุฑ ูุนู ูุง ุณูุฏู ุงูุชู ูุฌุฏ ูู ุงูููุงู ูู ุฌูุง ุฌูุง ููุจู ูุฌุฏ ูุง ุฑุงุญ ุงูุฑุงู ุญุชู ุฎููู ุจุจุฑูุชู ูุจุญูุงุชู ุฒู ูุง ูู          </p>
          <button
            onClick={() => router.push("/book")}
            className="bg-pink-600 cursor-pointer text-white px-6 py-3 rounded-lg shadow hover:bg-pink-700 transition"
          >
            ุงูุชุญู ุงููุฏูุฉ ๐
          </button>

          <p className="text-pink-800 mt-8 max-w-md">
            ููู ูู ุงูู ูู ุดุบูุฉ ุงูุฏุงุก ููู ุงูู ุจุณ ูุงุฒู ุจุงูุงูู ุชุฏูุฑู ุนูู ุงุณู ููู ูููุฒ ุจุงููุฏูุฉ ุงูู ููู ููู ูุงู ููู ูุซูุฑ ูู ุงูููุงุณุจุงุช ูุงุฐ ุงุนุชุจุฑูู ุชูููุญ
          </p>
          <Link href="/hidden-gifts">
            <button className="bg-pink-400 cursor-pointer text-white px-6 py-3 rounded-lg shadow-lg hover:bg-pink-500 transition">
              ููุงุฌุขุช ุณุฑูุฉ ๐
            </button>
          </Link>
        </>
      )}
    </div>
  );
}
